{% extends "page.html.twig" %}

{% set can_export = login.isGroupManager() and preferences.pref_bool_groupsmanagers_exports or login.isAdmin() or login.isStaff() %}

{% macro group_item(login, group) %}
    <div class="item">
        <a class="ui label" href="{% if login.isGroupManager(group.getId()) %}{{ path_for("groups", {"id": group.getId()}) }}{% else %}#{% endif %}">
            {{ group.getName() }}
        </a>
        {% if group.getGroups()|length > 0 %}
            <i class="dropdown icon"></i>
            <div class="right menu">
                {% for child_group in group.getGroups() %}
                    {{ _self.group_item(login, child_group) }}
                {% endfor %}
            </div>
        {% endif %}
    </div>
{% endmacro %}

{% block content %}

<div class="ui floating compact labeled simple dropdown button">
    <a class="ui icon button">
        <i class="dropdown icon"></i> {{ _T("Select a group") }}
    </a>
    <span class="ui secondary label">{{ group.getFullName() }}</span>
    <div class="menu">
    {% for group in groups_root %}
        {{ _self.group_item(login, group) }}
    {% endfor %}
    </div>
</div>

{% if can_export %}
    <div class="ui buttons">
        <a href="{{ path_for("pdf_groups", {"id": group.getId()}) }}" class="ui labeled icon button tooltip" title="{{ _T("Current group (and attached people) as PDF") }}">
            <i class="file pdf red icon" aria-hidden="true"></i>
            {{ _T("Group PDF") }}
        </a>
        <div class="or" data-text="{{ _T("or") }}"></div>
        <a href="{{ path_for("pdf_groups") }}" class="ui button tooltip" title="{{ _T("Export all groups and their members as PDF") }}">
            {{ _T("All groups PDF") }}
        </a>
    </div>
{% endif %}

    {% if group.getId() %}
        {% include "elements/group.html.twig" with {"group": group, "groups": groups} %}
    {% else %}
        {{ _T("no group") }}
    {% endif %}
{% endblock %}

{% block javascripts %}
<script type="text/javascript">
    $(function() {
        var _mode;

        {# New group #}
        $('#newgroup').click(function(){
            var _href = $(this).attr('href');
            var _input = '<div class="ui labeled input"><div class="ui label">{{ _T("Name:") }}</div><input type="text" name="new_group_name" id="new_group_name" required/></div>';
            $('body').modal({
                title: '{{ _T("Add a new group") }}',
                class: 'tiny',
                content: _input,
                onApprove: function() {
                    var _name = $('#new_group_name').val();
                    console.log(_name);
                    if ( _name != '' ) {
                        //check uniqueness
                        $.ajax({
                            url: '{{ path_for("ajax_groupname_unique") }}',
                            type: "POST",
                            data: {
                                ajax: true,
                                gname: _name
                            },
                            {% include 'elements/js/loader.js.twig' %},
                            success: function(res){
                                if ( res.success == false ) {
                                    if (res.message) {
                                        alert(res.message)
                                    } else {
                                        alert('{{ _T("The group name you have requested already exists in the database.") }}');
                                    }
                                } else {
                                    $(location).attr('href', _href.replace('NAME', _name));
                                }
                            },
                            error: function() {
                                alert("{{ _T("An error occurred checking name uniqueness :(")|e('js') }}");
                            }
                        });
                    } else {
                        alert('{{ _T("Pleade provide a group name")|e('js') }}');
                        return false;
                    }
                },
                actions: [{
                    text    : '{{ _T("Create")|e('js') }}',
                    class   : 'green approve'
                },{
                    text    : '{{ _T("Close")|e('js') }}',
                    class   : 'deny'
                },]
            }).modal('show');
            return false;
        });

        {# Members popup #}
        var _btnuser_mapping = function(){
            $('#btnusers_small, #btnmanagers_small').click(function(){
                _mode = ($(this).attr('id') == 'btnusers_small') ? 'members' : 'managers';
                var _persons = $('input[name="' + _mode + '[]"]').map(function() {
                    return $(this).val();
                }).get();
                $.ajax({
                    url: '{{ path_for('ajaxMembers') }}',
                    type: "POST",
                    data: {
                        multiple: true,
                        from: 'groups',
                        gid: $('#id_group').val(),
                        mode: _mode,
                        members: _persons
                    },
                    {% include 'elements/js/loader.js.twig' with {
                        selector: '.tab.segment.active'
                    } %},
                    success: function(res){
                        _members_dialog(res, _mode);
                    },
                    error: function() {
                        alert("{{ _T("An error occurred displaying members interface :(")|e('js') }}");
                    }
                });
                return false;
            });
        }
        _btnuser_mapping();

        var _members_dialog = function(res, mode){
            var _title = '{{ _T("Group members selection")|e('js') }}';
            if ( mode == 'managers' ) {
                _title = '{{ _T("Group managers selection")|e('js') }}';
            }
            $('body').modal({
                title: _title,
                class: 'members-selection fullscreen scrolling',
                content: res,
                actions: [{
                    text    : '{{ _T("Close")|e("js") }}',
                    class   : 'cancel'
                }]
            }).modal('show');
            _members_ajax_mapper(res, $('#group_id').val(), mode);

        }

        var _members_ajax_mapper = function(res, gid, mode){
            $('#btnvalid').click(function(){
                //store entities in the original page so they can be saved
                var _container;
                if ( mode == 'managers' ) {
                    _container = $('#group_managers');
                } else {
                    _container = $('#group_members');
                }
                var _persons = new Array();
                $('li[id^="member_"]').each(function(){
                    _persons[_persons.length] = this.id.substring(7, this.id.length);
                });
                if ( _persons.length == 0 ) {
                    var _persons = '';
                }
                $.ajax({
                    url: '{{ path_for('ajaxGroupMembers') }}',
                    type: "POST",
                    data: {
                        persons: _persons,
                        person_mode: mode
                    },
                    {% include "elements/js/loader.js.twig" with {
                        selector: '#btnvalid',
                        loader: 'button'
                    } %},
                    success: function(res){
                        var _modified = '<div class="ui orange message with-transition"><div class="content">{{ _T("Items in this list have been modified. Don't forget to save your changes.")|e('js') }}</div></div>';
                        _container.find('.message').remove();
                        if ( res != 0 ) {
                            _container.find('table.listing').remove();
                            _container.children('.segment').append(res);
                            _container.children('#group_' + mode + ' .segment').append(_modified);
                        } else {
                            var _emptyselection = '<tbody><tr><td colspan="2">{{ _T("No member attached")|e('js') }}</td></tr></tbody>';
                            _container.find('table.listing tbody').remove();
                            _container.find('table.listing').append(_emptyselection);
                            _container.children('#group_' + mode + ' .segment').append(_modified);
                        }
                        $('.members-selection').modal('hide');
                        $('.message.with-transition').transition('flash');
;
                    },
                    error: function() {
                        alert("{{ _T("An error occurred displaying members interface :(")|e('js') }}");
                    }
                });
            });
            //Remap links
            var _none = $('#none_selected').clone();
            $('li[id^="member_"]').click(function(){
                $(this).remove();
                if ( $('#selected_members ul li').length == 0 ) {
                    $('#selected_members ul').append(_none);
                }
            });
            $('.members-selection a.choice').click(function(e){
                e.preventDefault();
                var _mid = this.href.match(/.*\/(\d+)$/)[1];
                var _mname = $(this).text();
                $('#none_selected').remove()
                if ( $('#member_' + _mid).length == 0 ) {
                    var _li = '<li id="member_' + _mid + '" class="item"><i class="ui user minus icon"></i><span class="ui content">' + _mname + '</span></li>';
                    $('#selected_members ul').append(_li);
                    $('#member_' + _mid).click(function(){
                        $(this).remove();
                        if ( $('#selected_members ul li').length == 0 ) {
                            $('#selected_members ul').append(_none);
                        }
                    });
                }
                return false;
            });

            $('.members-selection .pagination a').click(function(){
                var gid = $('#the_id').val();
                var _members = new Array();
                $('li[id^="member_"]').each(function(){
                    _members[_members.length] = this.id.substring(7, this.id.length);
                });

                $.ajax({
                    url: this.href,
                    type: "POST",
                    data: {
                        from: 'groups',
                        gid: gid,
                        members: _members,
                        mode: _mode,
                        multiple: true
                    },
                    {% include 'elements/js/loader.js.twig' with {
                        loader: '#listing'
                    } %},
                    success: function(res){
                        $('#listing').empty();
                        //_members_ajax_mapper(res, gid, _mode);
                        alert('TODO');
                    },
                    error: function() {
                        alert("{{ _T("An error occurred displaying members interface :(")|e('js') }}");
                    }
                });
                return false;
            });
        }
    });
</script>
{% endblock %}
